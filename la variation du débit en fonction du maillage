import numpy as np
import matplotlib.pyplot as plt
Liste_Debit1 = []
w=10    #Le plus petit maillage
q=90    #le plus grand maillage
r=10    #le pas entre les points
for a in range(w,q,r):
    L = 6e-2
    N = 21 
    l = 2e-2
    M = a  # pour voir la courbe du debit en fonction du maillage de la longueur il suffit de donner une valeur pour N et mettre M = a 
    P1 = 0.0162
    P2 = 0
    eta = 0.000018

    DX = L / N
    DY = l / M

    D = ((N + 1) * (M + 1))
    A = np.zeros((3 * D, 3 * D))
    B = np.zeros((3 * D, 1))

    for i in range(0, D):
        if i % (N + 1) == 0:

            A[i][i] = 1
            A[i][i + N] = -1
            B[i][0] = 0
            # periodicite entre les bords gauche et droit du domaine Ux

            A[i + D][i + D] = 1
            A[i + D][i + D + N] = -1
            B[i + D][0] = 0
            # periodicite entre les bords gauche et droit du domaine Uy

            A[i + 2 * D][i + 2 * D] = 1
            B[i + 2 * D][0] = P1
            # pression sur le bord gauche du domaine

        elif i % (N + 1) == N:

            A[i][i] = 1 / DX
            A[i][i - 1] = -1 / DX
            A[i][i - N] = 1 / DX
            A[i][i - N + 1] = -1 / DX
            B[i][0] = 0
            # periodicite de la derivé entre les bords gauche et droit du domaine Ux

            A[i + D][i + D] = 1 / DX
            A[i + D][i + D - 1] = -1 / DX
            A[i + D][i + D - N] = 1 / DX
            A[i + D][i + D - N + 1] = -1 / DX
            B[i + D][0] = 0
            # periodicite de la derivé entre les bords gauche et droit du domaine Uy

            A[i + 2 * D][i + 2 * D] = 1
            B[i + 2 * D][0] = P2
            # pression sur le bord droit du domaine
        elif i <= N:

            A[i][i] = 1
            B[i][0] = 0
            # Ux = 0

            A[i + D][i + D] = 1
            B[i + D][0] = 0
            # Uy = 0

            A[i + 2 * D][i + D] = -1 / DY
            A[i + 2 * D][i + D + N + 1] = 1 / DY
            B[i + (2 * D)][0] = 0
            # derivee normale de la vitesse normale a la frontiere du domaine s’annule

        elif i >= (M * (N + 1)):

            A[i][i] = 1
            B[i][0] = 0
            # Ux = 0

            A[i + D][i + D] = 1
            B[i + D][0] = 0
            # Uy = 0

            A[i + 2 * D][i + D] = 1 / DY
            A[i + 2 * D][i + D - N - 1] = -1 / DY
            B[i + (2 * D)][0] = 0
            # derivee normale de la vitesse normale a la frontiere du domaine s’annule

        else:
            A[i][i - N - 1] = 1 / (DY * DY)
            A[i][i - 1] = 1 / (DX * DX)
            A[i][i] = - (2 / (DX * DX)) - (2 / (DY * DY))
            A[i][i + 1] = 1 / (DX * DX)
            A[i][i + N + 1] = 1 / (DY * DY)
            A[i][2 * D + i + 1] = -1 / (2 * eta * DX)
            A[i][2 * D + i - 1] = 1 / (2 * eta * DX)
            B[i][0] = 0
            # premiere equation laplacien(Ux) - (1/eta)*grad(Px)

            A[i + D][D + i - N - 1] = 1 / (DY * DY)
            A[i + D][D + i - 1] = 1 / (DX * DX)
            A[i + D][D + i] = - (2 / (DX * DX)) - (2 / (DY * DY))
            A[i + D][D + i + 1] = 1 / (DX * DX)
            A[i + D][D + i + N + 1] = 1 / (DY * DY)
            A[i + D][2 * D + i + N + 1] = -1 / (2 * eta * DY)
            A[i + D][2 * D + i - N - 1] = 1 / (2 * eta * DY)
            B[i + D][0] = 0
            # deuxieme equation laplacien(Uy) - (1/eta)*grad(Py)

            A[i + 2 * D][2 * D + i - N - 1] = 1 / (DY * DY)
            A[i + 2 * D][2 * D + i - 1] = 1 / (DX * DX)
            A[i + 2 * D][2 * D + i] = - (2 / (DX * DX)) - (2 / (DY * DY))
            A[i + 2 * D][2 * D + i + 1] = 1 / (DX * DX)
            A[i + 2 * D][2 * D + i + N + 1] = 1 / (DY * DY)
            B[i + 2 * D][0] = 0
            # div(u) = 0
    n2 = (M+1)
    n1 = (N+1)
    l1 = L
    l2 = l
    p2 = P2
    p1 = P1
    s= np.linalg.solve(A,B)
    ux = s[0:n1*n2]
    uy = s[n1*n2: 2*n1*n2]
    p = s[2*n1*n2:]
    show = np.reshape(p,(n2, n1))

    moyenne_debit = 0
    HL3=l2/(n2)
    ListeDebi = []
    for j in range(0,n1):
        S = 0
        for i in range (0,n2):
            Y = np.sqrt(ux[i*n1+j]**2+uy[i*n1+j]**2)
            S=S+Y
        S = S*HL3
        moyenne_debit+= S
        ListeDebi.append(S)
        print(" á la pression",p[j]," Le debit vaut : " ,S," La résistance vaut ", (-p2+p1)/S)
    moyenne_debit = moyenne_debit/n1
    print( " la moyenne des debit vaut ", moyenne_debit)
    print("le plus grand ecart entre les debits est : " , (max(ListeDebi)-min(ListeDebi)))
    ecart_type = 0
    for i in range(len(ListeDebi)):
        ecart_type = ecart_type + ((ListeDebi[i]-(moyenne_debit))**2)

    ecart_type = np.sqrt((1/n1)*ecart_type)
    print("l'ecart type est : " , ecart_type)
    Liste_Debit1.append(moyenne_debit)

x=np.linspace(w,q,int(((q-w)/(r))))
plt.plot(x,Liste_Debit1,"r-")
plt.xlabel("le maillage de l'axe y")
plt.ylabel("le debit moyen")
plt.title("courbe representant la variation du debit en fonction du maillage de l'axe y")
plt.show()
